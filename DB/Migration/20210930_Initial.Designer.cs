// <auto-generated />
using System;
using DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DBMetricsAgent.Migrations
{
    [DbContext(typeof(MetricsDbContext))]
    [Migration("20210917125418_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Entities.CpuMetric", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("integer")
                    .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                b.Property<DateTime>("Time")
                    .HasColumnType("timestamp without time zone");

                b.Property<int>("Value")
                    .HasColumnType("integer");

                b.HasKey("Id");

                b.ToTable("CpuMetrics");
            });

            modelBuilder.Entity("Entities.HardDriveMetric", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("integer")
                    .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                b.Property<DateTime>("Time")
                    .HasColumnType("timestamp without time zone");

                b.Property<int>("Value")
                    .HasColumnType("integer");

                b.HasKey("Id");

                b.ToTable("HardDriveMetrics");
            });

            modelBuilder.Entity("Entities.NetMetric", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("integer")
                    .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                b.Property<DateTime>("Time")
                    .HasColumnType("timestamp without time zone");

                b.Property<int>("Value")
                    .HasColumnType("integer");

                b.HasKey("Id");

                b.ToTable("NetMetrics");
            });

            modelBuilder.Entity("Entities.NetworkMetric", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("integer")
                    .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                b.Property<DateTime>("Time")
                    .HasColumnType("timestamp without time zone");

                b.Property<int>("Value")
                    .HasColumnType("integer");

                b.HasKey("Id");

                b.ToTable("NetworkMetrics");
            });

            modelBuilder.Entity("Entities.RamMetric", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("integer")
                    .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                b.Property<DateTime>("Time")
                    .HasColumnType("timestamp without time zone");

                b.Property<int>("Value")
                    .HasColumnType("integer");

                b.HasKey("Id");

                b.ToTable("RamMetrics");
            });
#pragma warning restore 612, 618
        }
    }
}